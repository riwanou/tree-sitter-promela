======
Atomic
======

init {
	atomic {
		tmp = b;
		b = a;
		a = tmp
	}
}

---

(source_file
  (init
    (block
      (block
        (assign
          (varref
            (name))
          (varref
            (name)))
        (assign
          (varref
            (name))
          (varref
            (name)))
        (assign
          (varref
            (name))
          (varref
            (name)))))))

=====
Break
=====

init {
  L1: do
    :: t1 -> t2
    :: t3 -> break
    :: break
  od
}

---

(source_file
  (init
    (block
      (name)
      (options
        (option
          (varref
            (name))
          (varref
            (name)))
        (option
          (varref
            (name)))
        (option)))))

===
Do
===

active proctype counter()
{
	do
	:: count++
	:: count--
	:: (count == 0) ->
		break
	od
}

---

(source_file
  (proctype
    (active)
    (name)
    (block
      (options
        (option
          (assign
            (varref
              (name))))
        (option
          (assign
            (varref
              (name))))
        (option
          (binary_expr
            (varref
              (name))
            (number)))))))

===
If
===

init {
  if
  :: (a != b) -> skip
  :: (a == b) -> skip
  :: else -> skip
  fi
}

---

(source_file
  (init
    (block
      (options
        (option
          (binary_expr
            (varref
              (name))
            (varref
              (name))))
        (option
          (binary_expr
            (varref
              (name))
            (varref
              (name))))
        (option)))))

======
Labels
======

active proctype dijkstra()
{
S0:
S1:	do
	:: q!p ->
S2:		q?v
	:: true
	od
/* S3 */
}

---

(source_file
  (proctype
    (active)
    (name)
    (block
      (name)
      (name)
      (options
        (option
          (send
            (varref
              (name))
            (send_args
              (arg_lst
                (varref
                  (name)))))
          (name)
          (receive
            (varref
              (name))
            (recv_args
              (recv_arg
                (varref
                  (name))))))
        (option))
      (comment))))
